#!/bin/sh
set -e


TRIPLETS="/ /i386-linux-gnu/ /x86_64-linux-gnu/ /arm-linux-gnueabihf/ /aarch64-linux-gnu/ /powerpc64le-linux-gnu/"
DIVERT_QUIET="--quiet"


add_multiarch_diversion()
{
	local file source_dir diversion_dir triplet
	file="$1"
	source_dir="$2"
	diversion_dir="$3"

	for triplet in $TRIPLETS ; do
		dpkg-divert $DIVERT_QUIET --add --rename --package $DPKG_MAINTSCRIPT_PACKAGE --divert \
			${diversion_dir}${triplet}${file} \
			${source_dir}${triplet}${file}
	done
}

if [ "$1" = "configure" ]
then

	# make new diversions
	add_multiarch_diversion libGL.so /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGL.so.1 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGL.so.1.0.0 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGL.so.1.2 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGL.so.1.2.0 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGL.so.1.7.0 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libEGL.so /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libEGL.so.1 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libEGL.so.1.0.0 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libEGL.so.1.1.0 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGLESv1_CM.so /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGLESv1_CM.so.1 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGLESv1_CM.so.1.1.0 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGLESv1_CM.so.1.2.0 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGLESv2.so /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGLESv2.so.2 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGLESv2.so.2.0.0 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGLESv2.so.2.1.0 /usr/lib /usr/lib/mesa-diverted
	add_multiarch_diversion libGLX_indirect.so.0 /usr/lib /usr/lib/mesa-diverted

fi


# validate_diverted_symlink original diverted expected_target...
# the last expected_target will be used as default for restoring the link
validate_diverted_symlink()
{
	local original diverted target owner filename link
	original="$1"
	diverted="$2"
	shift 2
	filename="$(basename "$original")"

	# determine ownership of the original file
	owner="$(LC_ALL=C dpkg-query -S "$original" 2>/dev/null | grep -v '^diversion by' || true)"

	if [ -L "$diverted" ] && [ -z "$owner" ]; then
		echo "Removing diverted '$filename' symlink owned by no package."
		rm "$diverted"
	fi

	link="$(readlink "$diverted" || true)"
	for target in "$@"; do
		if [ -L "$diverted" ] && [ "$link" = "$target" ]; then
			break
		fi
	done
	if [ -L "$diverted" ] && [ "$link" != "$target" ]; then
		echo "Removing diverted '$filename' symlink with unexpected target '$link'."
		rm "$diverted"
	fi

	if [ ! -L "$diverted" ] && [ -n "$owner" ]; then
		echo "Restoring diverted '$filename' symlink."
		ln -s "$target" "$diverted"
	fi
}

if [ "$1" = "configure" ]; then

	# do some validation of the diverted libGL.so and libGL.so.1
	for triplet in $TRIPLETS ; do
		for target in libGL.so.1.7.0 libGL.so.1 NONE
		do
			test ! -f /usr/lib/mesa-diverted${triplet}${target} || break
		done
		validate_diverted_symlink /usr/lib${triplet}libGL.so /usr/lib/mesa-diverted${triplet}libGL.so ${target}
		# the symlink should point to the newest (libglvnd > mesa > ancient whatever) file that we have diverted
		for target in libGL.so.1.7.0 libGL.so.1.0.0 libGL.so.1.2.0 libGL.so.1.2 NONE
		do
			test ! -f /usr/lib/mesa-diverted${triplet}${target} || break
		done
		validate_diverted_symlink /usr/lib${triplet}libGL.so.1 /usr/lib/mesa-diverted${triplet}libGL.so.1 ${target}
	done

fi


add_slave()
{
	local target_link name source_path prefix
	target_link="$1"
	name="$2"
	source_path="$3"
	prefix="glx--"

	if [ -f "${source_path}" ] && [ -d "$(dirname "${target_link}")" ]; then
		echo --slave "${target_link}" "${prefix}${name}" "${source_path}"
	fi
}

add_multiarch_slave()
{
	local target_dir target_sub_dir file source_dir source_sub_dir prefix suffix triplet
	target_dir="$1"
	target_sub_dir="$2"
	file="$3"
	source_dir="$4"
	source_sub_dir="$5"
	prefix="$6"
	srcfile="${7:-$file}"

	for triplet in $TRIPLETS ; do
		# s|/$||; s|^/|-|;
		suffix="${triplet%/}"
		suffix="${suffix:+-${suffix#/}}"
		add_slave \
			"${target_dir}${triplet}${target_sub_dir}${file}" \
			"${prefix}${file}${suffix}" \
			"${source_dir}${triplet}${source_sub_dir}${srcfile}"
	done
}

if [ "$1" = "configure" ]; then

	# after initial diversion setup add a minimal glx alternative
	# s.t. libGL.so.1 etc. are not missing until glx-alternative-mesa
	# processed the triggers to properly create the alternative
	if [ -z "$2" ]; then

		# libGL.so.1 (from /usr/lib/mesa-diverted/)
		slaves="$(add_multiarch_slave /usr/lib "" libGL.so.1 /usr/lib/mesa-diverted)
			$(add_multiarch_slave /usr/lib "" libEGL.so.1 /usr/lib/mesa-diverted)
			$(add_multiarch_slave /usr/lib "" libGLESv1_CM.so.1 /usr/lib/mesa-diverted)
			$(add_multiarch_slave /usr/lib "" libGLESv2.so.2 /usr/lib/mesa-diverted)
	"
		if echo "$slaves" | grep -q "slave" ; then
			update-alternatives --install /usr/lib/glx glx /usr/lib/mesa-diverted 5 $slaves
		fi
	fi

fi


if [ "$1" = "configure" ]; then

	# activate triggers
	dpkg-trigger register-glx-alternative-mesa
	dpkg-trigger /usr/lib/libGL.so.1
	dpkg-trigger /usr/lib/libGL.so

	# put all packages shipping the diverted files in triggers-awaited state
	for package in libgl1 libegl1 libgles1 libgles2 libgl1-mesa-glx libegl1-mesa libgles1-mesa libgles2-mesa libglx-mesa0
	do
		dpkg-trigger --by-package=${package} register-glx-alternative-mesa
	done

	dpkg-trigger --no-await ldconfig

fi


#DEBHELPER#
